name: File tests

on:
  push:
    branches:
      - master
      - 5.*
      - 4.x
    paths:
      - '.github/scripts/*.sh'
      - '.github/workflows/*.yml'
      - 'requirements/*.yml'
      - 'MANIFEST.in'
      - '**.bat'
      - '**.py'
      - '**.sh'
      - '!installers*/**'
      - '!.github/workflows/installer*.yml'

  pull_request:
    branches:
      - master
      - 5.*
      - 4.x
    paths:
      - '.github/scripts/*.sh'
      - '.github/workflows/*.yml'
      - 'requirements/*.yml'
      - 'MANIFEST.in'
      - '**.bat'
      - '**.py'
      - '**.sh'
      - '!installers*/**'
      - '!.github/workflows/installer*.yml'

jobs:
  build:
    name: Linux - Py${{ matrix.PYTHON_VERSION }}
    runs-on: ubuntu-latest
    env:
      CI: 'true'
      USE_CONDA: 'true'
      OS: 'linux'
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
    strategy:
      fail-fast: false
      matrix:
        PYTHON_VERSION: ['3.7', '3.9']
    timeout-minutes: 30
    steps:
      - name: Checkout Pull Requests
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Checkout Push
        if: github.event_name != 'pull_request'
        uses: actions/checkout@v2
      - name: Fetch branches
        if: github.event_name == 'pull_request'
        run: git fetch --prune --unshallow
      - name: Check build skips
        if: github.event_name == 'pull_request'
        shell: bash -l {0}
        run: source .github/scripts/check_skip.sh
      - name: Check build runs
        if: github.event_name != 'pull_request'
        shell: bash -l {0}
        run: echo "RUN_BUILD=true" >> $GITHUB_ENV
      - name: Install dependencies
        if: env.RUN_BUILD == 'true'
        shell: bash
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get install -qq pyqt5-dev-tools libxcb-xinerama0 xterm --fix-missing
      - name: Cache conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if requirements/*.txt has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-cacheconda-installconda-${{ matrix.PYTHON_VERSION }}-${{ env.CACHE_NUMBER }}-${{ hashFiles('requirements/*.txt') }}
      - name: Cache pip
        if: env.RUN_BUILD == 'true'
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-cachepip-installconda-${{ env.CACHE_NUMBER }}-${{ hashFiles('setup.py') }}
      - name: Install Conda
        if: env.RUN_BUILD == 'true'
        uses: conda-incubator/setup-miniconda@v2
        with:
           activate-environment: test
           auto-update-conda: false
           auto-activate-base: false
           python-version: ${{ matrix.PYTHON_VERSION }}
           use-only-tar-bz2: true
           channels: conda-forge,defaults
           channel-priority: strict
           miniforge-variant: Mambaforge
      - name: Create test environment
        if: env.RUN_BUILD == 'true'
        shell: bash -l {0}
        run: bash -l .github/scripts/install.sh
      - name: Use QtAwesome 1.0.1
        if: env.RUN_BUILD == 'true'
        shell: bash -l {0}
        run: pip install --no-deps qtawesome==1.0.1
      - name: Install QDarkStyle from master
        if: env.RUN_BUILD == 'true'
        shell: bash -l {0}
        run: pip install --no-deps git+https://github.com/ColinDuquesnoy/QDarkStyleSheet.git@develop
      - name: Show test environment
        if: env.RUN_BUILD == 'true'
        shell: bash -l {0}
        run: |
          conda info
          conda list
      - name: Run file tests
        if: env.RUN_BUILD == 'true'
        shell: bash -l {0}
        run: xvfb-run --auto-servernum .github/scripts/modules_test.sh || xvfb-run --auto-servernum .github/scripts/modules_test.sh
      # Uncomment this to debug the CI job
      # - name: Setup tmate session
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
